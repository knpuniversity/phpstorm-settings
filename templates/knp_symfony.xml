<templateSet group="symfony">
  <template name="formhandle" value="$form = $this-&gt;createForm($CLASSNAME$::class);&#10;&#10;$form-&gt;handleRequest($request);&#10;if ($form-&gt;isSubmitted() &amp;&amp; $form-&gt;isValid()) {&#10;    // todo - do some work, like saving stuff&#10;&#10;    $this-&gt;addFlash('success', '$SUCCESSMESSAGE$');&#10;&#10;    return $this-&gt;redirectToRoute('$ROUTENAME$', []);&#10;}" description="Adds controller form-handling code" toReformat="true" toShortenFQNames="true">
    <variable name="CLASSNAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="SUCCESSMESSAGE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ROUTENAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="formrow" value="{{ form_row(form.$FIELD$) }}" description="" toReformat="true" toShortenFQNames="true">
    <variable name="FIELD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML_TEXT" value="true" />
      <option name="HTML" value="true" />
      <option name="Twig" value="true" />
    </context>
  </template>
  <template name="formrowfull" value="&lt;div class=&quot;form-control&quot;&gt;&#10;    {{ form_label(form.$FIELD$) }}&#10;    {{ form_widget(form.$FIELD$) }}&#10;    {{ form_errors(form.$FIELD$) }}&#10;&lt;/div&gt;" description="Renders widget/label/errors" toReformat="true" toShortenFQNames="true">
    <variable name="FIELD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML_TEXT" value="true" />
      <option name="HTML" value="true" />
      <option name="Twig" value="true" />
    </context>
  </template>
  <template name="repofind" value="$this-&gt;getDoctrine()&#10;    -&gt;getRepository('$REPO$')-&gt;$METHOD$($ARG$);" description="Queries from a doctrine repository in a controller" toReformat="true" toShortenFQNames="true">
    <variable name="REPO" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="METHOD" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ARG" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="rendertwig" value="return $this-&gt;render('$TEMPLATE$', [&#10;    $END$&#10;]);&#10;" description="Renders a Twig template from a controller" toReformat="true" toShortenFQNames="true">
    <variable name="TEMPLATE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="404unless" value="if ($CONDITION$) {&#10;    throw $this-&gt;createNotFoundException($MESSAGE$);&#10;}" description="404 if statement for your controller" toReformat="true" toShortenFQNames="true">
    <variable name="CONDITION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MESSAGE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="include" value="{% include('$TEMPLATE$') %}" description="" toReformat="true" toShortenFQNames="true">
    <variable name="TEMPLATE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML_TEXT" value="true" />
      <option name="HTML" value="true" />
      <option name="Twig" value="true" />
    </context>
  </template>
  <template name="method" value="@Method(&quot;$METHOD$&quot;)" description="" toReformat="true" toShortenFQNames="true">
    <variable name="METHOD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Comment" value="true" />
    </context>
  </template>
  <template name="path" value="{{ path('$ROUTE$', { $END$ }) }}" description="" toReformat="true" toShortenFQNames="true">
    <variable name="ROUTE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="render" value="{{ render(controller('$CONTROLLER$', { $END$ })) }}" description="" toReformat="true" toShortenFQNames="true">
    <variable name="CONTROLLER" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML_TEXT" value="true" />
      <option name="HTML" value="true" />
      <option name="Twig" value="true" />
    </context>
  </template>
  <template name="route" value="@Route(&quot;/$PATH$&quot;, name=&quot;$NAME$&quot;)" description="" toReformat="true" toShortenFQNames="true">
    <variable name="PATH" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME" expression="snakeCase(PATH)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Comment" value="true" />
    </context>
  </template>
  <template name="action" value="/**&#10; * @Route(&quot;/$PATH$&quot;, name=&quot;$ROUTE_NAME$&quot;)&#10; */&#10;public function $NAME$Action()&#10;{&#10;    $END$&#10;}" description="Creates a controller action." toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PATH" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ROUTE_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="service" value="$NAME$:&#10;    class: $CLASS$&#10;    arguments:&#10;        - '$ARG1$'" description="Creates a YML service" toReformat="true" toShortenFQNames="true">
    <variable name="CLASS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME" expression="snakeCase(CLASS)" defaultValue="service_name" alwaysStopAt="true" />
    <variable name="ARG1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="tags" value="tags:&#10;    - { name: $TAGNAME$ }" description="Yaml service tags" toReformat="true" toShortenFQNames="true">
    <variable name="TAGNAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="createquery" value="$this-&gt;getEntityManager()&#10;    -&gt;createQuery('SELECT $ALIAS$&#10;                   FROM $ENTITY$ $ALIAS$&#10;                   WHERE $ALIAS$.$PROPERTY$ = :$PARAMETER$')&#10;    -&gt;setParameter('$PARAMETER$', $ARGUMENT$)&#10;    -&gt;execute();" description="Query objects in repositories with DQL" toReformat="false" toShortenFQNames="true">
    <variable name="ALIAS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ENTITY" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PROPERTY" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMETER" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGUMENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="getem" value="$em = $this-&gt;getDoctrine()-&gt;getManager();" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="getrepo" value="$em-&gt;getRepository('$ENTITY$');" toReformat="false" toShortenFQNames="true">
    <variable name="ENTITY" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="doctrinecolumn" value="/**&#10; * @var $PHPTYPE$&#10; *&#10; * @ORM\Column(name=&quot;$FIELDNAME$&quot;, type=&quot;$TYPE$&quot;)&#10; */&#10;private $$$PROPERTYNAME$;" description="Adds a property with @ORM annotations" toReformat="true" toShortenFQNames="true">
    <variable name="PROPERTYNAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FIELDNAME" expression="snakeCase(PROPERTYNAME)" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PHPTYPE" expression="snakeCase(TYPE)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="asset" value="{{ asset('$PATH$') }}" toReformat="false" toShortenFQNames="true">
    <variable name="PATH" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML_TEXT" value="true" />
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="asseticjs" value="{% javascripts&#10;    '$PATH$'$END$&#10;%}&#10;    &lt;script type=&quot;text/javascript&quot; src=&quot;{{ asset_url }}&quot;&gt;&lt;/script&gt;&#10;{% endjavascripts %}" toReformat="false" toShortenFQNames="true">
    <variable name="PATH" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML_TEXT" value="true" />
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="asseticcss" value="{% stylesheets&#10;    '$PATH$'$END$&#10;    filter='cssrewrite'&#10;%}&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ asset_url }}&quot; /&gt;&#10;{% endstylesheets %}" toReformat="false" toShortenFQNames="true">
    <variable name="PATH" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML_TEXT" value="true" />
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="xmlservices" value="&lt;?xml version=&quot;1.0&quot; ?&gt;&#10;&#10;&lt;container xmlns=&quot;http://symfony.com/schema/dic/services&quot;&#10;    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#10;    xsi:schemaLocation=&quot;http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd&quot;&gt;&#10;&#10;    &lt;services&gt;&#10;        &lt;service id=&quot;$SERVICEID$&quot; class=&quot;$CLASS$&quot; /&gt;&#10;    &lt;/services&gt;&#10;&lt;/container&gt;" description="Generates an XML services file" toReformat="false" toShortenFQNames="true">
    <variable name="SERVICEID" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XSL_TEXT" value="true" />
      <option name="XML" value="true" />
      <option name="XML_TEXT" value="true" />
    </context>
  </template>
  <template name="yamlroute" value="$NAME$:&#10;    path:   /$PATH$&#10;    defaults:  { _controller: $CONTROLLER$ }" description="YAML route" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PATH" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CONTROLLER" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML_TEXT" value="true" />
      <option name="HTML" value="true" />
      <option name="XSL_TEXT" value="true" />
      <option name="XML" value="true" />
      <option name="XML_TEXT" value="true" />
      <option name="JSON" value="true" />
      <option name="SQL" value="true" />
      <option name="CSS_PROPERTY_VALUE" value="true" />
      <option name="CSS_DECLARATION_BLOCK" value="true" />
      <option name="CSS_RULESET_LIST" value="true" />
      <option name="CSS" value="true" />
      <option name="CUCUMBER_FEATURE_FILE" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
      <option name="TypeScript" value="true" />
      <option name="PHP" value="true" />
      <option name="PHP Comment" value="true" />
      <option name="PHP String Literal" value="true" />
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="querybuilder" value="$this-&gt;createQueryBuilder('$ALIAS$')&#10;            -&gt;where('$ALIAS$.$PROPERTY$ = :$PARAMETER$')&#10;            -&gt;setParameter('$PARAMETER$', $ARGUMENT$)&#10;            -&gt;getQuery();" description="Query objects in repositories using query builder" toReformat="true" toShortenFQNames="true">
    <variable name="ALIAS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PROPERTY" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMETER" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGUMENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="trans" value="{{ '$MESSAGE$'|trans }}" toReformat="false" toShortenFQNames="true" description="Allows fast entering of translated messages">
    <variable name="MESSAGE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML_TEXT" value="true" />
      <option name="HTML" value="true" />
      <option name="Twig" value="true" />
    </context>
  </template>
  <template name="servix" value="&lt;service id=&quot;$NAME$&quot; class=&quot;$CLASS$&quot;&gt;&#10;    &lt;argument type=&quot;service&quot; id=&quot;$ARG1$&quot;/&gt;&#10;&lt;/service&gt;" description="Creates a XML service" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ARG1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XSL_TEXT" value="true" />
      <option name="XML" value="true" />
      <option name="XML_TEXT" value="true" />
    </context>
  </template>
</templateSet>
